version: '3.5'
services:
  fuseki:
    image: stain/jena-fuseki:3.10.0
    container_name: fuseki
    volumes:
      - ./data/fuseki:/fuseki
      - ./data/staging:/staging
    ports:
      - "3030:3030"
    expose:
      - "3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "admin"

  middleware:
    build:
      context: ./middleware
      args:
        - SELECTED_BRANCH=master
        - SELECTED_DIR=src/middleware/boilerplates/pair-ldp-server
    container_name: middleware
    depends_on:
      - fuseki
      - redis
    volumes:
      - ./middleware/logs:/app/logs
      - ./middleware/jwt:/app/jwt
      - ./middleware/uploads:/app/uploads
      - ./data/fuseki/backups:/app/fuseki-backups # Needed to backup fuseki datasets
    networks:
      - semapps
    ports:
      - "3000:3000"
    expose:
      - "3000"

  frontend:
    build:
      context: ./frontend
      args:
        - SELECTED_BRANCH=master
        - SELECTED_DIR=src/frontend/boilerplates/archipelago
    container_name: frontend
    networks:
      - semapps
    ports:
      - "5000:5000"
    expose:
      - "5000"

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - middleware
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
      - "443"
    networks:
      - semapps
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - semapps
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - ./data/redis:/data
    networks:
      - semapps
    command: ["redis-server", "--appendonly", "yes"]

networks:
  semapps:
    name: semapps_network
