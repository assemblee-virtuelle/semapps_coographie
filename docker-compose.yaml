version: '3.5'
services:
  fuseki:
    image: stain/jena-fuseki:3.10.0
    container_name: fuseki-coographie
    volumes:
      - ./data/fuseki:/fuseki
      - ./data/staging:/staging
    ports:
      - "3030:3030"
    expose:
      - "3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "admin"

  middleware:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: middleware-coographie
    depends_on:
      - fuseki
    volumes:
      - ./server/:/app
    networks:
      - semapps
    ports:
      - "3000:3000"
    expose:
      - "3000"
    command: bash -c "npm install && npm start"

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: frontend-coographie
    environment:
      - PORT=5000
    volumes:
      - ./client:/app
    networks:
      - semapps
    ports:
      - "5000:5000"
    expose:
      - "5000"
    command: bash -c "npm rebuild && npm install && npm run bootstrap && npm start"

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx-coographie
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - middleware
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
      - "443"
    networks:
      - semapps
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot-coographie
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - semapps
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  semapps:
    name: semapps_network
